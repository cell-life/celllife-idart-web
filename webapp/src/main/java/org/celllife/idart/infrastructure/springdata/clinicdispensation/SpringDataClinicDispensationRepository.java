package org.celllife.idart.infrastructure.springdata.clinicdispensation;

import org.celllife.idart.domain.clinicdispensation.ClinicDispensation;
import org.celllife.idart.domain.clinicdispensation.ClinicDispensationRepository;
import org.celllife.idart.domain.clinic.Clinic;
import org.celllife.idart.domain.dispensation.Dispensation;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingAndSortingRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.data.rest.repository.annotation.RestResource;

import java.util.Date;

import javax.annotation.Generated;

/**
 * Generated by org.celllife.idart.codegen.CodeGenerator
 */
@RestResource(exported = false)
@Generated("org.celllife.idart.codegen.CodeGenerator")
public interface SpringDataClinicDispensationRepository
        extends PagingAndSortingRepository<ClinicDispensation, Long>, ClinicDispensationRepository {

    @Query("select clinicDispensation " +
            "from ClinicDispensation clinicDispensation " +
            "where clinicDispensation.clinic = :clinic " +
            "and clinicDispensation.dispensation = :dispensation " +
            "and clinicDispensation.fromDate <= :dateActive " +
            "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    ClinicDispensation findByClinicAndDispensationAndDateActive(
                @Param("clinic") Clinic clinic,
                @Param("dispensation") Dispensation dispensation,
                @Param("dateActive") Date dateActive);

    @Query("select count(*) " +
            "from ClinicDispensation clinicDispensation " +
            "where clinicDispensation.clinic = :clinic " +
            "and clinicDispensation.dispensation = :dispensation " +
            "and clinicDispensation.fromDate <= :dateActive " +
            "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    Long countByClinicAndDispensationAndDateActive(
                @Param("clinic") Clinic clinic,
                @Param("dispensation") Dispensation dispensation,
                @Param("dateActive") Date dateActive);

    @Query("select clinicDispensation " +
            "from ClinicDispensation clinicDispensation " +
            "where clinicDispensation.clinic = :clinic " +
            "and clinicDispensation.fromDate <= :dateActive " +
            "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    Iterable<ClinicDispensation> findByClinicAndDateActive(
                @Param("clinic") Clinic clinic,
                @Param("dateActive") Date dateActive);

    @Query("select clinicDispensation " +
            "from ClinicDispensation clinicDispensation " +
            "where clinicDispensation.clinic.pk = :clinicIdentifier " +
            "and clinicDispensation.fromDate <= :dateActive " +
            "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    Iterable<ClinicDispensation> findByClinicIdentifierAndDateActive(
                @Param("clinicIdentifier") String clinicIdentifier,
                @Param("dateActive") Date dateActive);


    @Query("select clinicDispensation " +
                "from ClinicDispensation clinicDispensation " +
                "join clinicDispensation.dispensation.identifiers dispensationIdentifier " +
                "where clinicDispensation.clinic.pk = :clinicIdentifier " +
                "and dispensationIdentifier.value = :dispensationIdentifier " +
                "and clinicDispensation.fromDate <= :dateActive " +
                "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    Iterable<ClinicDispensation> findByClinicIdentifierAndDispensationIdentifierAndDateActive(
                @Param("clinicIdentifier") String clinicIdentifier,
                @Param("dispensationIdentifier") String dispensationIdentifier,
                @Param("dateActive") Date dateActive);

    @Query("select clinicDispensation " +
                "from ClinicDispensation clinicDispensation " +
                "where clinicDispensation.clinic.pk = :clinicIdentifier " +
                "and clinicDispensation.dispensation.pk = :dispensationIdentifier " +
                "and clinicDispensation.fromDate <= :dateActive " +
                "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    ClinicDispensation findOneByClinicIdentifierAndDispensationIdentifierAndDateActive(
                @Param("clinicIdentifier") String clinicIdentifier,
                @Param("dispensationIdentifier") String dispensationIdentifier,
                @Param("dateActive") Date dateActive);

    @Query("select clinicDispensation " +
            "from ClinicDispensation clinicDispensation " +
            "where clinicDispensation.dispensation = :dispensation " +
            "and clinicDispensation.fromDate <= :dateActive " +
            "and ((clinicDispensation.thruDate is not null and clinicDispensation.thruDate > :dateActive) or clinicDispensation.thruDate is null)")
    Iterable<ClinicDispensation> findByDispensationAndDateActive(
                @Param("dispensation") Dispensation dispensation,
                @Param("dateActive") Date dateActive);

}
