package ${domainPackageName}

import ${entities[0].domainPackageName}.${entities[0].className}
import ${entities[1].domainPackageName}.${entities[1].className}

import javax.annotation.Generated

/**
 * Generated by org.celllife.idart.codegen.CodeGenerator
 */
@Generated("org.celllife.idart.codegen.CodeGenerator")
interface ${entities[0].className}${entities[1].className}Service {

    boolean exists(${entities[0].className} ${entities[0].propertyName}, ${entities[1].className} ${entities[1].propertyName}, Date dateActive)

    void save(${entities[0].className} ${entities[0].propertyName}, ${entities[1].className} ${entities[1].propertyName})

    void save(${entities[0].className} ${entities[0].propertyName}, Iterable<${entities[1].className}> ${entities[1].propertyName}s)

    void save(${entities[1].className} ${entities[1].propertyName}, Iterable<${entities[0].className}> ${entities[0].propertyNamePlural})

    void deleteBy${entities[0].className}(${entities[0].className} ${entities[0].propertyName})

    void deleteBy${entities[1].className}(${entities[1].className} ${entities[1].propertyName})

    void delete(${entities[0].className} ${entities[0].propertyName}, ${entities[1].className} ${entities[1].propertyName})

    Iterable<${entities[1].className}> find${entities[1].classNamePlural}By${entities[0].className}(${entities[0].className} ${entities[0].propertyName})

    Iterable<${entities[1].className}> find${entities[1].classNamePlural}By${entities[0].className}Identifier(String ${entities[0].propertyName}Identifier)

    Iterable<${entities[1].className}> find${entities[1].classNamePlural}By${entities[0].className}IdentifierAnd${entities[1].className}Identifier(String ${entities[0].propertyName}Identifier, String ${entities[1].propertyName}Identifier)

    ${entities[1].className} findOne${entities[1].className}By${entities[0].className}IdentifierAnd${entities[1].className}Identifier(String ${entities[0].propertyName}Identifier, String ${entities[1].propertyName}Identifier)

    Iterable<${entities[0].className}> find${entities[0].classNamePlural}By${entities[1].className}(${entities[1].className} ${entities[1].propertyName})
}
