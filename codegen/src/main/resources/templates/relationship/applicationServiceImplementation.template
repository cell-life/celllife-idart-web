package ${applicationService.packageName}

import ${from.applicationService.packageName}.${from.applicationService.className}
import ${to.applicationService.packageName}.${to.applicationService.className}
import ${domainService.packageName}.${domainService.className}
import ${from.entity.packageName}.${from.entity.className}
import ${to.entity.packageName}.${to.entity.className}
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.stereotype.Service    

import javax.annotation.Generated

/**
 */
@Generated("org.celllife.idart.codegen.CodeGenerator")
@Service class ${applicationService.className}Impl implements ${applicationService.className} {

    @Autowired ${from.applicationService.className} ${from.applicationService.fieldName}

    @Autowired ${to.applicationService.className} ${to.applicationService.fieldName}

    @Autowired ${domainService.className} ${domainService.fieldName}

    @Override
    void save(${from.entity.identifier.className} ${from.entity.identifier.fieldName}, ${to.entity.identifier.className} ${to.entity.identifier.fieldName}, ${to.entity.className} ${to.entity.fieldName}) {
        save(${from.entity.identifier.fieldName}, ${to.entity.fieldName})
    }

    @Override
    void save(${from.entity.className} ${from.entity.fieldName}, ${to.entity.className} ${to.entity.fieldName}) {

        ${to.applicationService.fieldName}.save(${to.entity.fieldName})

        ${domainService.fieldName}.save(${from.entity.identity.fieldName}, ${to.identity.entity.fieldName})
    }

    @Override
    Iterable<${to.entity.className}> find${to.entity.collectionClassName}By${from.entity.className}Identifier(${from.entity.identifier.className} ${from.entity.identifier.fieldName}) {
         ${domainService.fieldName}.find${to.entity.collectionClassName}By${from.entity.className}Identifier(${from.entity.identifier.fieldName})
    }

    @Override
    ${to.entity.className} findOne${to.entity.className}By${from.entity.identifier.className}And${to.entity.identifier.className}(${from.entity.identifier.className} ${from.entity.identifier.fieldName}, ${to.entity.identifier.className} ${to.entity.identifier.fieldName}) {

    }
}
