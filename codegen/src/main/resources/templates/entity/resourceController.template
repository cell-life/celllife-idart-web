package ${resourceController.packageName}

import ${id.packageName}.${id.className}
import ${entity.packageName}.${entity.className}
import ${entity.packageName}.${entity.className}NotFoundException
import ${entity.packageName}.${entity.className}ValidationException
import ${securityAdapter.packageName}.${securityAdapter.className}
import org.springframework.beans.factory.annotation.Value
import org.springframework.stereotype.Controller
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.ResponseBody

import javax.annotation.Generated
import javax.inject.Inject
import javax.servlet.http.HttpServletResponse
import java.security.Principal

import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST
import static javax.servlet.http.HttpServletResponse.SC_CREATED
import static javax.servlet.http.HttpServletResponse.SC_NOT_FOUND
import static org.springframework.web.bind.annotation.RequestMethod.GET
import static org.springframework.web.bind.annotation.RequestMethod.POST

/**
 */
@Generated("org.celllife.idart.codegen.CodeGenerator")
@Controller class ${resourceController.className} {

    @Inject ${securityAdapter.className} ${securityAdapter.fieldName}

    @Value('\${external.base.url}') String baseUrl

    @ResponseBody
    @RequestMapping(value = "/${resourcePath}/{${id.fieldName}}", method = GET, produces = "application/json")
    ${entity.className} findBy${id.className}(@PathVariable("${id.fieldName}") ${id.className} ${id.fieldName},
                                              Principal principal,
                                              HttpServletResponse response) {

        try {

            ${securityAdapter.fieldName}.findBy${id.className}(principal, ${id.fieldName})

        } catch (${entity.className}NotFoundException e) {
            response.setStatus(SC_NOT_FOUND)
        }
    }

    @RequestMapping(value = "/${resourcePath}", method = POST)
    void save(@RequestBody ${entity.className} ${entity.fieldName}, Principal principal, HttpServletResponse response) {

        try {

            ${entity.fieldName} = ${securityAdapter.fieldName}.save(principal, ${entity.fieldName})

            response.setHeader("Location", "\${baseUrl}/${entity.fieldName}s/\${${entity.fieldName}.${id.shortFieldName}}")
            response.setStatus(SC_CREATED)

        } catch (${entity.className}ValidationException e) {
            response.setStatus(SC_BAD_REQUEST)
        }
    }
}
