package ${domainService.packageName}

import ${id.packageName}.${id.className}

import org.springframework.beans.factory.annotation.Autowired
import org.springframework.stereotype.Service

import javax.annotation.Generated

import static ${domainEvent.packageName}.${domainEvent.className}.EventType.SAVED
import static ${domainEvent.packageName}.${domainEvent.className}.new${domainEvent.className}

/**
 */
@Generated("org.celllife.idart.codegen.CodeGenerator")
@Service class ${domainService.className}Impl implements ${domainService.className} {

    @Autowired ${repository.className} ${repository.fieldName}

    @Autowired ${validator.className} ${validator.fieldName}

    @Autowired ${eventPublisher.className} ${eventPublisher.fieldName}

    @Override
    ${entity.className} save(${entity.className} ${entity.fieldName}) throws ${entity.className}ValidationException {

        ${validator.fieldName}.validate(${entity.fieldName})

        ${eventPublisher.fieldName}.publish(new${domainEvent.className}(${entity.fieldName}, SAVED))

        ${repository.fieldName}.save(${entity.fieldName})
    }

    @Override
    ${entity.className} findBy${id.className}(${id.className} ${id.fieldName}) throws ${entity.className}NotFoundException {

        def ${entity.fieldName} = ${repository.fieldName}.findOne(${id.fieldName})

        if (${entity.fieldName} == null) {
            throw new ${entity.className}NotFoundException("Could not find ${entity.className} with ${id.name} [\${ ${id.fieldName}}]")
        }

        ${entity.fieldName}
    }
}
